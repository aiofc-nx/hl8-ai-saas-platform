openapi: 3.0.3
info:
  title: 基础设施层缓存API
  description: 基础设施层缓存管理API，支持Redis缓存和查询优化
  version: 1.0.0
  contact:
    name: HL8 SAAS Platform
    email: dev@hl8.com

servers:
  - url: https://api.hl8.com/infrastructure
    description: 生产环境
  - url: https://staging-api.hl8.com/infrastructure
    description: 测试环境

paths:
  /cache/entries:
    get:
      summary: 获取缓存条目列表
      description: 获取所有缓存条目
      tags:
        - Cache
      parameters:
        - name: tenantId
          in: query
          required: true
          schema:
            type: string
          description: 租户ID
        - name: key
          in: query
          schema:
            type: string
          description: 缓存键过滤
        - name: tag
          in: query
          schema:
            type: string
          description: 标签过滤
      responses:
        "200":
          description: 成功获取缓存条目列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CacheEntry"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

    post:
      summary: 创建缓存条目
      description: 创建新的缓存条目
      tags:
        - Cache
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCacheEntryRequest"
      responses:
        "201":
          description: 缓存条目创建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CacheEntry"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

  /cache/entries/{key}:
    get:
      summary: 获取缓存条目
      description: 根据键获取缓存条目
      tags:
        - Cache
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: 缓存键
        - name: tenantId
          in: query
          required: true
          schema:
            type: string
          description: 租户ID
      responses:
        "200":
          description: 成功获取缓存条目
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CacheEntry"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

    put:
      summary: 更新缓存条目
      description: 更新缓存条目
      tags:
        - Cache
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: 缓存键
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCacheEntryRequest"
      responses:
        "200":
          description: 缓存条目更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CacheEntry"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

    delete:
      summary: 删除缓存条目
      description: 删除缓存条目
      tags:
        - Cache
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: 缓存键
        - name: tenantId
          in: query
          required: true
          schema:
            type: string
          description: 租户ID
      responses:
        "204":
          description: 缓存条目删除成功
        "404":
          $ref: "#/components/responses/NotFound"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

  /cache/clear:
    post:
      summary: 清空缓存
      description: 清空指定条件的缓存
      tags:
        - Cache
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClearCacheRequest"
      responses:
        "200":
          description: 缓存清空成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClearCacheResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

  /cache/stats:
    get:
      summary: 获取缓存统计信息
      description: 获取缓存性能统计信息
      tags:
        - Cache
      parameters:
        - name: tenantId
          in: query
          required: true
          schema:
            type: string
          description: 租户ID
      responses:
        "200":
          description: 成功获取缓存统计信息
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CacheStats"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

components:
  schemas:
    CacheEntry:
      type: object
      required:
        - key
        - value
        - ttl
        - createdAt
        - expiresAt
        - accessCount
        - lastAccessed
        - tags
      properties:
        key:
          type: string
          description: 缓存键
        value:
          type: object
          description: 缓存值
        ttl:
          type: integer
          description: 生存时间(秒)
        createdAt:
          type: string
          format: date-time
          description: 创建时间
        expiresAt:
          type: string
          format: date-time
          description: 过期时间
        accessCount:
          type: integer
          description: 访问次数
        lastAccessed:
          type: string
          format: date-time
          description: 最后访问时间
        tags:
          type: array
          items:
            type: string
          description: 标签列表
        isolationContext:
          $ref: "#/components/schemas/IsolationContext"

    CreateCacheEntryRequest:
      type: object
      required:
        - key
        - value
        - ttl
      properties:
        key:
          type: string
          description: 缓存键
        value:
          type: object
          description: 缓存值
        ttl:
          type: integer
          description: 生存时间(秒)
        tags:
          type: array
          items:
            type: string
          description: 标签列表
        isolationContext:
          $ref: "#/components/schemas/IsolationContext"

    UpdateCacheEntryRequest:
      type: object
      properties:
        value:
          type: object
          description: 缓存值
        ttl:
          type: integer
          description: 生存时间(秒)
        tags:
          type: array
          items:
            type: string
          description: 标签列表

    ClearCacheRequest:
      type: object
      properties:
        tenantId:
          type: string
          description: 租户ID
        organizationId:
          type: string
          description: 组织ID
        departmentId:
          type: string
          description: 部门ID
        userId:
          type: string
          description: 用户ID
        tags:
          type: array
          items:
            type: string
          description: 标签列表
        pattern:
          type: string
          description: 键模式匹配

    ClearCacheResult:
      type: object
      required:
        - clearedCount
        - message
      properties:
        clearedCount:
          type: integer
          description: 清空的条目数量
        message:
          type: string
          description: 操作结果消息
        details:
          type: object
          description: 详细信息

    CacheStats:
      type: object
      required:
        - hitRate
        - missRate
        - totalEntries
        - memoryUsage
      properties:
        hitRate:
          type: number
          description: 命中率
        missRate:
          type: number
          description: 未命中率
        totalEntries:
          type: integer
          description: 总条目数
        memoryUsage:
          type: number
          description: 内存使用量(字节)
        averageResponseTime:
          type: number
          description: 平均响应时间(毫秒)
        topKeys:
          type: array
          items:
            $ref: "#/components/schemas/CacheKeyStats"
          description: 热门键统计

    CacheKeyStats:
      type: object
      required:
        - key
        - accessCount
        - lastAccessed
      properties:
        key:
          type: string
          description: 缓存键
        accessCount:
          type: integer
          description: 访问次数
        lastAccessed:
          type: string
          format: date-time
          description: 最后访问时间
        size:
          type: integer
          description: 大小(字节)

    IsolationContext:
      type: object
      required:
        - tenantId
        - sharingLevel
        - isShared
      properties:
        tenantId:
          type: string
          description: 租户ID
        organizationId:
          type: string
          description: 组织ID
        departmentId:
          type: string
          description: 部门ID
        userId:
          type: string
          description: 用户ID
        sharingLevel:
          type: string
          enum: [PLATFORM, TENANT, ORGANIZATION, DEPARTMENT, USER]
          description: 共享级别
        isShared:
          type: boolean
          description: 是否共享

  responses:
    BadRequest:
      description: 请求参数错误
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    Unauthorized:
      description: 未授权访问
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    Forbidden:
      description: 禁止访问
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    NotFound:
      description: 资源不存在
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: 错误代码
        message:
          type: string
          description: 错误消息
        timestamp:
          type: string
          format: date-time
          description: 错误时间
        details:
          type: object
          description: 错误详情

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []
