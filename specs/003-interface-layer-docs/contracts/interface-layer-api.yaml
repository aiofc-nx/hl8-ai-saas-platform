openapi: 3.0.3
info:
  title: Interface Layer API
  description: API specification for interface layer documentation and management
  version: 1.0.0
  contact:
    name: HL8 Development Team
    email: dev@hl8.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.hl8.com/v1
    description: Production server
  - url: https://staging-api.hl8.com/v1
    description: Staging server

paths:
  /documentation:
    get:
      summary: Get interface layer documentation
      description: Retrieve interface layer documentation based on audience and type
      operationId: getDocumentation
      parameters:
        - name: audience
          in: query
          description: Target audience for documentation
          required: false
          schema:
            type: string
            enum: [architects, developers, stakeholders]
        - name: type
          in: query
          description: Type of documentation
          required: false
          schema:
            type: string
            enum:
              [
                technical-plan,
                implementation-guide,
                architecture-diagram,
                index,
              ]
        - name: version
          in: query
          description: Documentation version
          required: false
          schema:
            type: string
            pattern: '^\d+\.\d+\.\d+$'
      responses:
        "200":
          description: Documentation retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentationResponse"
        "404":
          description: Documentation not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /documentation/{documentId}:
    get:
      summary: Get specific documentation
      description: Retrieve a specific documentation by ID
      operationId: getDocumentationById
      parameters:
        - name: documentId
          in: path
          required: true
          description: Documentation ID
          schema:
            type: string
            pattern: "^[a-zA-Z0-9-_]+$"
      responses:
        "200":
          description: Documentation retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentationDetail"
        "404":
          description: Documentation not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /documentation/{documentId}/sections:
    get:
      summary: Get documentation sections
      description: Retrieve sections of a specific documentation
      operationId: getDocumentationSections
      parameters:
        - name: documentId
          in: path
          required: true
          description: Documentation ID
          schema:
            type: string
            pattern: "^[a-zA-Z0-9-_]+$"
        - name: section
          in: query
          description: Specific section to retrieve
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Documentation sections retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentationSections"
        "404":
          description: Documentation not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /documentation/{documentId}/diagrams:
    get:
      summary: Get architecture diagrams
      description: Retrieve architecture diagrams for a specific documentation
      operationId: getArchitectureDiagrams
      parameters:
        - name: documentId
          in: path
          required: true
          description: Documentation ID
          schema:
            type: string
            pattern: "^[a-zA-Z0-9-_]+$"
        - name: format
          in: query
          description: Diagram format
          required: false
          schema:
            type: string
            enum: [mermaid, svg, png]
            default: mermaid
      responses:
        "200":
          description: Architecture diagrams retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArchitectureDiagrams"
        "404":
          description: Documentation not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /documentation/search:
    post:
      summary: Search documentation
      description: Search through interface layer documentation
      operationId: searchDocumentation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
      responses:
        "200":
          description: Search results retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
        "400":
          description: Invalid search request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    DocumentationResponse:
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Documentation"
        total:
          type: integer
          description: Total number of documents
        page:
          type: integer
          description: Current page number
        limit:
          type: integer
          description: Number of documents per page

    Documentation:
      type: object
      properties:
        id:
          type: string
          description: Documentation ID
        title:
          type: string
          description: Documentation title
        type:
          type: string
          enum:
            [technical-plan, implementation-guide, architecture-diagram, index]
          description: Documentation type
        audience:
          type: string
          enum: [architects, developers, stakeholders]
          description: Target audience
        version:
          type: string
          pattern: '^\d+\.\d+\.\d+$'
          description: Documentation version
        lastUpdated:
          type: string
          format: date-time
          description: Last update timestamp
        summary:
          type: string
          description: Brief description
        url:
          type: string
          format: uri
          description: Documentation URL

    DocumentationDetail:
      allOf:
        - $ref: "#/components/schemas/Documentation"
        - type: object
          properties:
            content:
              type: string
              description: Documentation content
            sections:
              type: array
              items:
                $ref: "#/components/schemas/DocumentationSection"
            metadata:
              type: object
              description: Additional metadata

    DocumentationSection:
      type: object
      properties:
        id:
          type: string
          description: Section ID
        title:
          type: string
          description: Section title
        content:
          type: string
          description: Section content
        order:
          type: integer
          description: Section order
        type:
          type: string
          enum: [text, code, diagram, table, list]
          description: Section type

    DocumentationSections:
      type: object
      properties:
        documentId:
          type: string
          description: Documentation ID
        sections:
          type: array
          items:
            $ref: "#/components/schemas/DocumentationSection"

    ArchitectureDiagrams:
      type: object
      properties:
        documentId:
          type: string
          description: Documentation ID
        diagrams:
          type: array
          items:
            $ref: "#/components/schemas/ArchitectureDiagram"

    ArchitectureDiagram:
      type: object
      properties:
        id:
          type: string
          description: Diagram ID
        title:
          type: string
          description: Diagram title
        type:
          type: string
          enum: [flowchart, sequence, class, deployment, security]
          description: Diagram type
        mermaidSource:
          type: string
          description: Mermaid.js source code
        description:
          type: string
          description: Diagram description
        components:
          type: array
          items:
            type: string
          description: Components shown in diagram

    SearchRequest:
      type: object
      properties:
        query:
          type: string
          description: Search query
        audience:
          type: string
          enum: [architects, developers, stakeholders]
          description: Target audience filter
        type:
          type: string
          enum:
            [technical-plan, implementation-guide, architecture-diagram, index]
          description: Documentation type filter
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 10
          description: Maximum number of results
        offset:
          type: integer
          minimum: 0
          default: 0
          description: Number of results to skip

    SearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/SearchResult"
        total:
          type: integer
          description: Total number of results
        query:
          type: string
          description: Original search query
        filters:
          type: object
          description: Applied filters

    SearchResult:
      type: object
      properties:
        documentId:
          type: string
          description: Documentation ID
        title:
          type: string
          description: Documentation title
        type:
          type: string
          description: Documentation type
        audience:
          type: string
          description: Target audience
        summary:
          type: string
          description: Brief description
        relevanceScore:
          type: number
          minimum: 0
          maximum: 1
          description: Search relevance score
        url:
          type: string
          format: uri
          description: Documentation URL

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token authentication

security:
  - BearerAuth: []

tags:
  - name: Documentation
    description: Interface layer documentation management
  - name: Architecture
    description: Architecture diagrams and visualizations
  - name: Search
    description: Documentation search and discovery
